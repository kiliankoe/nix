name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Ensure flakes and nix-command are enabled for all nix invocations
  NIX_CONFIG: |
    experimental-features = nix-command flakes
    # Use GitHub token to avoid API rate limits when fetching flake inputs
    access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

jobs:
  eval-check-darwin:
    name: eval darwin
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v19

      - name: Enable fast caches
        uses: DeterminateSystems/magic-nix-cache-action@v13

      - name: Eval Darwin configs
        run: |
          set -euxo pipefail
          nix eval '.#darwinConfigurations.voyager.config.system.build.toplevel.outPath' >/dev/null
          nix eval '.#darwinConfigurations.sojourner.config.system.build.toplevel.outPath' >/dev/null
          echo "Darwin configurations evaluated successfully"

  eval-check-linux:
    name: eval linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v19

      - name: Enable fast caches
        uses: DeterminateSystems/magic-nix-cache-action@v13

      - name: Eval NixOS configs
        run: |
          set -euxo pipefail
          nix eval '.#nixosConfigurations.kepler.config.system.build.toplevel.outPath' >/dev/null
          nix eval '.#nixosConfigurations.cubesat.config.system.build.toplevel.outPath' >/dev/null
          nix eval '.#nixosConfigurations.midgard.config.system.build.toplevel.outPath' >/dev/null
          echo "NixOS configurations evaluated successfully"
